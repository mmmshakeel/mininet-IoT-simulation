services:
  mininet:
    build: .
    container_name: mininet
    tty: true
    privileged: true
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    command: bash -c "service openvswitch-switch start sleep 20 && /usr/share/openvswitch/scripts/ovs-ctl start --system-id=random && sleep 10 && python3 /topology.py && tail -f /dev/null"
    networks:
      - net
    volumes:
      - pcap:/mnt/pcap # A shared volume, access output from other services
      - ./topology.py:/topology.py
      - ./shared_volume:/mnt/pcap
      - ./ddos_attack.sh:/mnt/pcap/ddos_attack.sh

  attacker:
    build: ./docker/attacker
    container_name: attacker
    tty: true
    networks:
      - net
    command: tail -f /dev/null # Keep the container running for CLI access
    depends_on:
      - mininet
    volumes:
      - ./ddos_attack.sh:/ddos_attack.sh

  processor:
    build: ./docker/processor
    container_name: processor
    tty: true
    networks:
      - net
    depends_on:
      - mininet
    volumes:
      - pcap:/mnt/pcap
      - ./process_pcap.py:/app/process_pcap.py
      - ./shared_volume:/mnt/pcap
    command: python /app/process_pcap.py

networks:
  net:
    driver: bridge

volumes:
  pcap: